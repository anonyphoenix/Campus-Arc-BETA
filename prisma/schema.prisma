generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Student {
  id                 String              @id @default(cuid())
  eduUsername        String
  email              String?
  ethAddress         String?
  OCaccessToken      String? // access_token from OC ID verification response
  OCIdtoken          String? // id_token from OC ID verification response
  arcModules         ArcModule[] // A student can register to many arcModules
  registrationStakes RegistrationStake[] // A student can have many registrationStakes
}

model ArcModule {
  id          String   @id @default(cuid())
  category    String
  level       String
  title       String
  imageSrc    String
  description String
  lessons     String
  time        String
  projects    String
  student     Student? @relation(fields: [studentId], references: [id]) // The student object who registered this one arcModule
  studentId   String? // the id of the student who registered this one arcModule
}

model RegistrationStake {
  id                    String  @id @default(cuid())
  hash                  String
  amount                Int
  student               Student @relation(fields: [studentId], references: [id]) // The student object who approved this one registrationStake
  studentId             String // the id of the student who registered this one registrationStake
  registeredArcModuleId String // the id of the arcModule that this registrationStake is registered to
}

enum Gender {
  Male
  Female
}

// Notes: 
// 1- Ekstra Student detaylarÄ± daha sonra eklenecek.
// 2- Arc Designer eklenecek
