generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Student {
  id                      Int      @id @default(autoincrement())
  eduUsername             String   @unique
  email                   String?
  ethAddress              String?
  OCaccessToken           String? // access_token from OC ID verification response
  registeredArcModulesIds String[] // UsersArcModules objelerini çekeceksin buradan.
  registrationStakesIds   String[] // A student can have many registrationStakes
}

model ArcDesigner {
  id            Int      @id @default(autoincrement())
  arcModulesIds String[] // An arcDesigner can have many arcModules
  fullName      String
  designation   String
  imageSrc      String
  twitter       String?
  linkedin      String?
  description   String
}

model UsersArcModules {
  id                  Int      @id @default(autoincrement())
  userId              Int
  arcModuleId         Int // The id of the arcModule that this user is registered to.
  isRegistered        Boolean
  completedLessonsIds String[]
  isCollaborate       Boolean
}

// Genel olarak listelenen arc modülleri.
model ArcModule {
  id                    Int      @id @default(autoincrement())
  category              String
  level                 String
  title                 String
  imageSrc              String
  description           String
  lessonsIds            String[] // The lessons that this arcModule has
  lessonNumber          Int      @default(0)
  time                  String // basic string
  projects              String // basic string
  whatYouWillLearn      String[]
  studentsRegisteredIds String[] // The ALL students who registered this arcModule
  arcDesignersId        Int[] // Arc designers id
}

model Lesson {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  videoSrc    String
  arcModuleId Int // The id of the arcModule that this lesson belongs to.
  isCompleted Boolean
}

model RegistrationStake {
  id                    Int      @id @default(autoincrement())
  hash                  String
  amount                Int
  studentId             Int // the id of the student who registered this one registrationStake
  registeredArcModuleId Int // the id of the arcModule that this registrationStake is registered to
  collabStudentsId      String[] // the students who are collaborating with the student who registered this registrationStake
}

enum Gender {
  Male
  Female
}
